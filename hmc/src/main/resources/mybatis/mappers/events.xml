<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.hmc.dao.EventDao">
	
	<resultMap type="com.hmc.vo.Event" id="EventResultMap">
		<id column="event_code" property="code"/>
		<result column="coupon_code" property="couponCode"/>
		<result column="event_title" property="title"/>
		<result column="event_content" property="content"/>
		<result column="event_writer" property="writer"/>
		<result column="event_start_date" property="startDate"/>
		<result column="event_end_date" property="endDate"/>
		<result column="event_coupon_amount" property="couponAmount"/>
		<result column="event_status" property="status"/>
	</resultMap>
	
	<select id="eventDetail" parameterType="string" resultMap="EventResultMap">
		select
		    e.event_code code, e.coupon_code couponCode, e.event_title title, e.event_content content, 
		    e.event_writer writer, e.event_start_date startDate, e.event_end_date endDate, e.event_coupon_amount couponAmount,
		    e.event_status status, c.coupon_name name
		from
		    t_event e ,t_coupon 
		where
		    e.coupon_code = c.coupon_code
		    and e.event_code = #{value}
	</select>
	
	<select id="getTotalRows" parameterType="map" resultType="int">
		select
			count(*)
		from
			t_event
		where
		 	event_status NOT IN ('N','S')
	</select>
	
	<select id="eventListPage" resultType="com.hmc.vo.Event" parameterType="map">
		select 
			event_code code, coupon_code couponCode, event_title title, event_content content, 
			event_writer writer, event_start_date startDate, event_end_date endDate, 
			event_coupon_amount couponAmount, event_status status, nvl2((select distinct ej.event_code
                                                                        from 
                                                                            t_event e, t_event_join ej, t_published_coupon p
                                                                        where 
                                                                            e.event_code = ej.event_code 
                                                                            and e.coupon_code = p.coupon_code
                                                                            and ej.event_code=#{eventCode }), 'YES', 'NO') drawed
		from(
			select
				row_number() over (order by event_status) rn,
				event_code, coupon_code, event_title, event_content, event_writer,
				event_start_date, event_end_date, event_coupon_amount, event_status
			from
				t_event
			order by event_code desc
		
		)
		where 
			rn between #{beginIndex} and #{endIndex}
		order by event_code desc
	</select>
	
	<select id="eventListPageByProceeding" resultType="com.hmc.vo.Event" parameterType="map">
		select 
			event_code code, coupon_code couponCode, event_title title, event_content content, 
			event_writer writer, event_start_date startDate, event_end_date endDate, 
			event_coupon_amount couponAmount, event_status status, nvl2((select 1
                                                                    from t_event_join Y
                                                                    where Y.event_code = v.event_code
                                                                    and Y.user_id = #{userId}),'YES','NO') joined
		from(
			select
				row_number() over (order by event_code desc) rn,
				event_code, coupon_code, event_title, event_content, event_writer,
				event_start_date, event_end_date, event_coupon_amount, event_status
			from
				t_event e 
			where event_status in ('Y','A')
		) v
		where 
			rn between #{beginIndex} and #{endIndex}
		order by event_code desc
	</select>
	
	<select id="eventListPageByWating" resultType="com.hmc.vo.Event" parameterType="map">
		select 
			event_code code, coupon_code couponCode, event_title title, event_content content, 
			event_writer writer, event_start_date startDate, event_end_date endDate, 
			event_coupon_amount couponAmount, event_status status, nvl2((select 1
                                                                    from t_event_join Y
                                                                    where Y.event_code = v.event_code
                                                                    and Y.user_id = #{userId}),'YES','NO') joined
		from(
			select
				row_number() over (order by event_code desc) rn,
				event_code, coupon_code, event_title, event_content, event_writer,
				event_start_date, event_end_date, event_coupon_amount, event_status
			from
				t_event e 
			where event_status in ('Y','A')
		) v
		where 
			rn between #{beginIndex} and #{endIndex}
		order by event_code desc
	</select>
	
	<select id="eventListPageByEnd" resultType="com.hmc.vo.Event" parameterType="map">
		select 
			event_code code, coupon_code couponCode, event_title title, event_content content, 
			event_writer writer, event_start_date startDate, event_end_date endDate, 
			event_coupon_amount couponAmount, event_status status
		from(
			select
				row_number() over (order by event_code desc) rn,
				event_code, coupon_code, event_title, event_content, event_writer,
				event_start_date, event_end_date, event_coupon_amount, event_status
			from
				t_event
			where event_status = 'N'
		)
		where 
			rn between #{beginIndex} and #{endIndex}
		order by event_code desc
	</select>
	
	
	
	<insert id="insertEvent" parameterType="com.hmc.vo.Event">
		<selectKey keyProperty="code" resultType="string" order="BEFORE">
			select 
				'EV' || lpad(T_EVENT_SEQ.nextval, 6,0)
			from dual
		</selectKey>
		insert into t_event
			(event_code, coupon_code, event_title, event_content,event_writer, 
						event_start_date, event_end_date, event_coupon_amount, event_status)
		values
			(#{code}, #{couponCode}, #{title}, #{content}, #{writer},
					 #{startDate}, #{endDate}, #{couponAmount}, #{status})
	</insert>
	
	<update id="updateEventStatus" parameterType="map">
		update t_event
		set
			event_status = #{status}
		where 	
			event_code = #{eventCode}
	</update>
	
	<update id="updateEventCodeIsNull" parameterType="string">
		update t_coupon
		set 
			event_code = null
		where 
			coupon_Code = #{code}
	</update>
	
	
	<update id="updateEvent" parameterType="com.hmc.vo.Event">
		update t_event
		set
			coupon_code = #{couponCode},
			event_title = #{title},
			event_content = #{content},
			event_writer = #{writer},
			event_start_date = #{startDate},
			event_end_date = #{endDate},
			event_coupon_amount = #{couponAmount}
		where 
			event_code = #{code}
	</update>
	
	<update id="updateStatus">
		update t_event
	    set event_status = <![CDATA[case
	                        when to_char(sysdate,'YYYYMMDD') > to_char(event_start_date,'YYYYMMDD')
	                        and to_char(sysdate,'YYYYMMDD') < to_char(event_end_date,'YYYYMMDD') then 'Y'
	                        when to_char(sysdate,'YYYYMMDD') > to_char(event_end_date,'YYYYMMDD') then 'N'
	                        when to_char(sysdate,'YYYYMMDD') < to_char(event_start_date,'YYYYMMDD') then 'S'
	                        end]]>
	</update>
	
	<select id="getAllEvents" resultMap="EventResultMap">
		select 
			*
		from
			t_event
		order by
			event_code desc
	</select>
	
	<select id="getEventByCode" parameterType="string" resultMap="EventResultMap">
		select
			*
		from 
			t_event
		where 
			event_code = #{value}
	</select>
	
	<delete id="deleteEvent" parameterType="string">
		delete from
			t_event
		where
			event_code = #{value}
	</delete>
	
	
	
</mapper>