<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.hmc.dao.InqueryDao">
	
	<resultMap type="com.hmc.vo.Inquery" id="InqueryResultMap">
		<id column="inquery_code" property="code"/>
		<result column="user_id" property="userId"/>
		<result column="inquery_category" property="category"/>
		<result column="inquery_title" property="title"/>
		<result column="inquery_content" property="content"/>
		<result column="branch_code" property="branchCode"/>
		<result column="inquery_created_date" property="createdDate"/>
		<result column="inquery_responder" property="responder"/>
		<result column="inquery_respond_content" property="respondContent"/>
		<result column="inquery_respond_date" property="respondDate"/>
		<result column="inquery_respond_status" property="respondStatus"/>
	</resultMap>
	
	<select id="getTotalRows" parameterType="map" resultType="int">
		select 
			count(*)
		from
			t_inquery
		where
			inquery_respond_status = 'N'
	</select>
	
	<select id="getAllInquerys" parameterType="map" resultType="com.hmc.vo.Inquery">
		select
			inquery_code as code,
			user_id as userId,
			inquery_category as category ,
			inquery_title as title,
			inquery_content as content,
			branch_code as branchCode,
			inquery_created_date as createdDate,
			inquery_responder as responder,
			inquery_respond_content as respondContent,
			inquery_respond_date as respondDate,
			inquery_respond_status as respondStatus
		from(
			select
				row_number() over (order by inquery_code desc) rn,
				inquery_code, user_id, inquery_category, inquery_title, inquery_content, branch_code, inquery_created_date,
				inquery_responder, inquery_respond_content, inquery_respond_date, inquery_respond_status
			from
				t_inquery
			where
				inquery_respond_status = 'N'		
		)	
		where 
			rn between #{beginIndex} and #{endIndex}
	</select>
	
	<select id="getTotalRowsY" parameterType="map" resultType="int">
		select 
			count(*)
		from
			t_inquery
		where
			inquery_respond_status = 'Y'
	</select>
	
	<select id="getAllInquerysY" parameterType="map" resultType="com.hmc.vo.Inquery">
		select
			inquery_code as code,
			user_id as userId,
			inquery_category as category ,
			inquery_title as title,
			inquery_content as content,
			branch_code as branchCode,
			inquery_created_date as createdDate,
			inquery_responder as responder,
			inquery_respond_content as respondContent,
			inquery_respond_date as respondDate,
			inquery_respond_status as respondStatus
		from(
			select
				row_number() over (order by inquery_code desc) rn,
				inquery_code, user_id, inquery_category, inquery_title, inquery_content, branch_code, inquery_created_date,
				inquery_responder, inquery_respond_content, inquery_respond_date, inquery_respond_status
			from
				t_inquery
			where
				inquery_respond_status = 'Y'		
		)	
		where 
			rn between #{beginIndex} and #{endIndex}
	</select>
	
	<select id="getInqueryByCode" parameterType="string" resultMap="InqueryResultMap">
		select *
		from t_inquery
		where inquery_code = #{value}
	</select>
	
	<select id="getTotalRowsByUserId" parameterType="map" resultType="int">
		select
			count(*)
		from
			t_inquery
		where
				user_id = #{userId}
			<choose>
					<when test="opt != null and opt == 'title'">
						and inquery_title like '%' || #{keyword} || '%'
					</when>
					<when test="opt != null and opt == 'content'">
						and inquery_content like '%' || #{keyword} || '%'
					</when>
			</choose>			
	</select>
	
	<select id="getAllInquerysByUserId" parameterType="map" resultType="com.hmc.vo.Inquery">
		select
			inquery_code as code,
			user_id as userId,
			inquery_category as category ,
			inquery_title as title,
			inquery_content as content,
			branch_code as branchCode,
			inquery_created_date as createdDate,
			inquery_responder as responder,
			inquery_respond_content as respondContent,
			inquery_respond_date as respondDate,
			inquery_respond_status as respondStatus
		from(
			select
				row_number() over (order by inquery_code desc) rn,
				inquery_code, user_id, inquery_category, inquery_title, inquery_content, branch_code, inquery_created_date,
				inquery_responder, inquery_respond_content, inquery_respond_date, inquery_respond_status
			from
				t_inquery
			where
				user_id = #{userId}	
			<choose>
					<when test="opt != null and opt == 'title'">
						and inquery_title like '%' || #{keyword} || '%'
					</when>
					<when test="opt != null and opt == 'content'">
						and inquery_content like '%' || #{keyword} || '%'
					</when>
			</choose>		
		)	
		where 
			rn between #{beginIndex} and #{endIndex}	
	</select>
	
	<insert id="insertInquery" parameterType="com.hmc.vo.Inquery">
		insert into t_inquery
			(inquery_code, user_id, inquery_category, inquery_title, inquery_content, branch_code)
		values
			('IQ' || lpad(T_INQUERY_SEQ.nextval, 6,0), #{userId}, #{category}, #{title}, #{content}, #{branchCode})
	</insert>
	
	<update id="adminUpdateInquery" parameterType="com.hmc.vo.Inquery">
		update
			t_inquery
		set
			inquery_responder 		= #{responder},
			inquery_respond_content = #{respondContent},
			inquery_respond_date 	= #{respondDate},
			inquery_respond_status 	= 'Y'
		where
			inquery_code 			= #{code}		
	</update>
	
	
	
	
	

</mapper>