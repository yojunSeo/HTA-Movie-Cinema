<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.hmc.dao.ScreenMovieDao">
	
	<resultMap type="com.hmc.vo.ScreenMovie" id="ScreenMovieResultMap">
		<id column="screen_code" property="code"/>
		<result column="movie_code" property="movieCode"/>
		<result column="movie_name" property="movieName"/>
		<result column="movie_running_time" property="runningTime"/>
		<result column="screen_start_date" property="startDate"/>
		<result column="screen_end_date" property="endDate"/>
	</resultMap>
	
	<insert id="insertScreenMovie" parameterType="com.hmc.vo.ScreenMovie">
		<selectKey keyProperty="code" resultType="string" order="BEFORE">
			select 'SC' || lpad(T_SCREEN_SEQ.nextval, 6,0) from dual
		</selectKey>
		insert into t_screen_movie
			(screen_code, movie_code, screen_start_date, screen_end_date , movie_name, movie_running_time)
		values
			(#{code}, #{movieCode}, #{startDate}, #{endDate}, #{movieName}, #{runningTime})
	</insert>
	
	<update id="updateScreenMovie" parameterType="com.hmc.vo.ScreenMovie">
		update t_screen_movie
		set
    		screen_start_date = #{startDate},
    		screen_end_date = #{endDate}
		where
    		screen_code = #{code}
	</update>
	
	<delete id="deleteScreenMovie" parameterType="string">
		delete from 
			t_screen_movie
		where 
    		screen_code = #{value}
	</delete>
	
	<select id="getAllScreenMovies" resultMap="ScreenMovieResultMap">
		select 
			*
		from 
			t_screen_movie
        where
        <![CDATA[ 
        sysdate < screen_end_date
        ]]>
		order by 
			screen_code desc
	</select>
	
	<select id="getScreenMovieByCode" parameterType="string" resultMap="ScreenMovieResultMap">
		select 
			*
		from 
			t_screen_movie
		where
    		screen_code = #{value}
	</select>
	
	<select id="getScreenMoviesCnt" resultType="int">
		select 
			count(*)
		from 
			t_screen_movie
	</select>
	
	<select id="getScreenMovies" parameterType="map" resultMap="ScreenMovieResultMap">
		select 
			* 
		from 
			(select row_number() over (order by screen_code desc) rn, screen_code,movie_code,movie_name,
            movie_running_time, screen_start_date,screen_end_date from t_screen_movie )
		where 
			rn between #{beginIndex} and #{endIndex}
	</select>
	
	<select id="getScreenSimpleInfo" resultType="hashmap">
		select 
			sc.screen_code as screenCode,
            sc.movie_name as movieName,
            mv.movie_grade as movieGrade
		from 
			t_screen_movie sc, t_movie mv
        where 
            sc.movie_code = mv.movie_code
		order by 
			screen_code desc
	</select>
	
	<select id="getBranchMovies" parameterType="string" resultType="hashmap">
		select distinct
			sc.screen_code as screenCode,
            sc.movie_name as movieName,
            mv.movie_grade as movieGrade
		from 
			t_screen_movie sc, t_movie mv, t_branch br, t_schedule sh
        where 
            sc.movie_code = mv.movie_code
        and
        	sh.branch_code = br.branch_code
        and
            sh.screen_code = sc.screen_code
        and
            br.branch_code = #{value}
        and 
            sh.schedule_start_time >= to_char(sysdate + round(540/1440, 5))
		order by 
			sc.screen_code desc
	</select>
	
	<select id="getScreenMovieWithoutSchedule" resultType="string">
		select 
			screen_code 
		from 
			t_screen_movie
		where 
			screen_code not in (select distinct 
									sh.screen_code 
								from 
									t_schedule sh 
								where 
									sh.schedule_date >= to_char((sysdate + round(540/1440, 5))-1, 'yyyy/MM/dd')))
	</select>
</mapper>