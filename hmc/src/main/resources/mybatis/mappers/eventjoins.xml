<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.hmc.dao.EventJoinDao">
	
	<resultMap type="com.hmc.vo.EventJoin" id="EventJoinResultMap">
		<result column="event_code" property="eventCode"/>
		<result column="user_id" property="userId"/>
		<result column="event_join_entry_date" property="entryDate"/>
		<result column="event_join_result" property="result"/>
	</resultMap>
	
	<insert id="insertEventJoin" parameterType="com.hmc.vo.EventJoin">
		insert into t_event_join
			(event_code, user_id)
		values
			(#{eventCode}, #{userId})
	</insert>
	
	<update id="updateEventJoinResult" parameterType="com.hmc.vo.EventJoin">
		update t_event_join
		set
    		event_join_result = #{result}
		where 
    		user_id = #{userId}
    	and
    		event_code = #{eventCode}
	</update>
	
	<select id="getUserIdByEventCode" parameterType="string" resultType="string">
		select
		    user_id
		from
		    t_event_join
		where
		    event_code=#{value}	
	</select>
	
	<update id="eventDraw" parameterType="com.hmc.vo.EventJoin">
		update
		   t_event_join
		set
		   event_join_result = 'Y'
		where (event_code, user_id) in (select event_code, user_id
		                                from ( select *
		                                       from t_event_join
		                                       where event_code = #{value}
		                                       order by dbms_random.random )
		                                 <![CDATA[where rownum <= 10]]>)
	</update>
	
	<update id="eventDrawNo" parameterType="com.hmc.vo.EventJoin">
		update
		   t_event_join
		set
		   event_join_result = 'N'
		where (event_code, user_id) in (select event_code, user_id
		                                from ( select *
		                                       from t_event_join
		                                       where event_code = #{value}
		                                       order by dbms_random.random )
		                                 <![CDATA[where rownum <= 10]]>)
	</update>
	
	<select id="getEventJoinByUserId" parameterType="string" resultMap="EventJoinResultMap">
		select 
    		*
		from 
   		 	t_event_join
		where 
    		user_id = #{value}
	</select>
	 
	<select id="getUserEventJoin" parameterType="string" resultType="hashmap">
		select 
    		ev.event_code as eventCode,
            ej.user_id as userId,
            ej.event_join_entry_date as entryDate,
            ej.event_join_result as result,
            ev.event_title as title,
            ev.event_start_date as startDate,
            ev.event_end_date as endDate,
            ev.event_status as status
		from 
   		 	t_event_join ej, t_event ev
		where 
    		user_id = #{value}
        and
            ej.event_code = ev.event_code
	</select>
	
	<select id="getEventJoinByEventCode" parameterType="string" resultMap="EventJoinResultMap">
		select 
   	 		*
		from 
    		t_event_join
		where 
    		event_code = #{value}
	</select>
	
	<delete id="deleteEventJoin" parameterType="string">
		delete from
			t_event_join
		where
			event_code = #{value}
	</delete>
	
	<select id="getUserIdAndResult" parameterType="string" resultMap="EventJoinResultMap">
		select
		    user_id, event_join_result
		from
		    t_event_join
	</select>
	
</mapper>