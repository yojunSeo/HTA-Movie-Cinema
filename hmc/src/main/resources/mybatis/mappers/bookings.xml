<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.hmc.dao.BookingDao">
	
	<resultMap type="com.hmc.vo.Booking" id="BookingResultMap">
		<id column="booking_code" property="code"/>
		<result column="schedule_code" property="scheduleCode"/>
		<result column="user_id" property="userId"/>
		<result column="payment_code" property="paymentCode"/>
		<result column="booking_date" property="bookingDate"/>
		<result column="booking_cnt" property="count"/>
		<result column="booking_price" property="price"/>
		<result column="booking_discount_price" property="discountPrice"/>
		<result column="booking_total_price" property="totalPrice"/>
		<result column="booking_status" property="status"/>
	</resultMap>
	
	<insert id="insertBooking" parameterType="com.hmc.vo.Booking">
		<selectKey keyProperty="code" resultType="string" order="BEFORE">
			select 
				'BK' || lpad(T_BOOKING_SEQ.nextval, 6,0)
			from dual
		</selectKey>
		insert into t_booking
			(booking_code, schedule_code, user_id, payment_code, 
					booking_cnt, booking_price, booking_discount_price, booking_total_price)
		values
			(#{code}, #{scheduleCode}, #{userId}, #{paymentCode} ,#{count}, #{price}, #{discountPrice}, #{totalPrice})
	</insert>

	<update id="updateBookingStatus" parameterType="string">
		update t_booking
		set
			booking_status = 'N'
		where
    		booking_code = #{value}
	</update>
	
	<select id="getBookingsByUserId" parameterType="string" resultMap="BookingResultMap">
		select
			*
		from 
			t_booking
		where
			user_id = #{value}
		order by
			booking_code desc
	</select>
	
	<select id="getBookingDetailsByUserId" parameterType="string" resultType="hashmap">
		select
			booking_code 			as bookingcode,
            sh.schedule_code 		as scheduleCode,
            sc.screen_code			as screenCode,
            sc.movie_name 			as movieName,
            sh.schedule_date as scheduleDate,
            sh.schedule_start_time as startTime,
            sh.schedule_end_time as endTime,
            rm.room_name 			as roomName,
            br.branch_name 			as branchName,
            user_id 				as userId,
            payment_code 			as paymentCode,
            booking_date 			as bookingdate,
            booking_cnt 			as count,
            booking_price 			as price,
            booking_discount_price 	as discountPrice,
            booking_total_price 	as totalPrice,
            booking_status as status,
            (select decode(count(*), 0, 'N', 'Y') from t_review rw where user_id = 'lim' and rw.booking_code = bk.booking_code  and rw.review_status = 'Y') reviewStatus
		from 
			t_booking bk, t_schedule sh, t_screen_movie sc, t_room rm, t_branch br
        where
            bk.schedule_code = sh.schedule_code
        and     
            sh.room_code = rm.room_code
        and
            sh.branch_code = br.branch_code
        and
            sh.screen_code = sc.screen_code
        and
            bk.user_id = #{value}
		order by
			booking_code desc
	</select>
	
	<select id="getBookingByCode" parameterType="string" resultMap="BookingResultMap">
		select
			*
		from 
			t_booking
		where
			booking_code = #{value}	
	</select>
</mapper>